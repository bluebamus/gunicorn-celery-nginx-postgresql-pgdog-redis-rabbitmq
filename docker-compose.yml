services:
  web:
    container_name: web_app
    build:
      context: .
      dockerfile: DockerfileWeb
    working_dir: /app
    command: bash -c "poetry config virtualenvs.create false && poetry install --no-root && gunicorn config.wsgi:application -c ./gunicorn.conf.py"
    #command: /bin/bash -c "tail -f /dev/null"
    volumes:
      - ./web:/app
      - ./conf/gunicorn.conf.py:/app/gunicorn.conf.py
    # ports:
    #   - "8000:8000"
    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq//
      - CELERY_RESULT_BACKEND=redis://redis:6379/0

  nginx:
    container_name: nginx_proxy
    image: nginx:latest
    ports:
      - "80:80"
    depends_on:
      - web
    volumes:
      - ./conf/nginx.conf:/etc/nginx/nginx.conf
      - ./conf/nginx_site.conf:/etc/nginx/conf.d/default.conf

  db:
    container_name: postgres_db
    image: postgres:16
    restart: always
    environment:
      POSTGRES_DB: app_db
      POSTGRES_USER: app_user
      POSTGRES_PASSWORD: securepassword
    volumes:
      - ./pgdata/:/var/lib/postgresql/data/
      - ./conf/postgresql.conf:/etc/postgresql/postgresql.conf
    command: -c 'config_file=/etc/postgresql/postgresql.conf'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U app_user -d app_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgdog:
    container_name: pgdog_monitor
    image: ghcr.io/pgdogdev/pgdog:main
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./conf/pgdog.toml:/pgdog/pgdog.toml
      - ./conf/users.toml:/pgdog/users.toml
      - ./pgdog_backups:/pgdog/backups   
      - ./logs/pgdog.log:/pgdog/pgdog.log
    ports:
      - "6432:6432"
    environment:
      RUST_LOG: debug

  redis:
    container_name: redis_cache
    image: redis:7
    volumes:
      - ./conf/redis.conf:/usr/local/etc/redis/redis.conf
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
    ports:
      - "6379:6379"

  rabbitmq:
    container_name: rabbitmq_broker
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    volumes:
      - ./rabbitmqdata:/var/lib/rabbitmq

